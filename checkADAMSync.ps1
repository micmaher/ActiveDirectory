<#
	.SYNOPSIS
	Finds LDS Groups not syncing
    Reports on critical failures

	.DESCRIPTION
	Looks for mail attributes which cause ADAMSync to fail

	.NOTES
    Author: Michael Maher
    
    Date: 12/JUNE/17
  
#>
#region Variables
    $kScript = 'checkAdamSync'
    $kDate = (Get-Date).ToString('yyyy-MM-dd_H-mm')
    $kLogRoot = 'E:\Scripts\Logs'

    # Jira Section
    $sender = $kScript + ".ps1@" + $($env:COMPUTERNAME).ToLower() + "." + $($env:USERDNSDOMAIN).ToLower()
    
    # SQL Section
    $kSQLServer = 'MSSQLSERVER'
    $kDBName = 'Reports'
    $kSchema = 'dbo'
    $kTable = $kScript
    $kLDSServer = '10.0.0.1:389' # Need to use the IP Address to Bind - http://stackoverflow.com/questions/489915/wcf-why-does-passing-in-a-remote-endpoint-fail
    $kLastUpdateTable = 'dbo.genericLastUpdated'
    
    # Grafana Section
    $kCarbonserver = 'grafana.ops.tripadvisor.com'
    $kCarbonport = '2015'

    # AdamSync Section
    $logPath = '\\LDAP\c$\Windows\ADAM\logs\LDAP01.log'
    #$logPath = '\\LDAP\c$\Windows\ADAM\logs\LDAP01-SAMPLE-VPN.log' # Test log exhibits failure conditions

#endregion

#region Logging
    if(!(Test-Path -Path "$klogRoot\$Kscript" )){
        New-Item -ItemType directory -Path "$klogRoot\$Kscript"
    }
    Start-Transcript -Path "$klogRoot\$Kscript\$Kdate-$kScript.log"
#endregion

#region Import Modules
If (Get-Command -ea SilentlyContinue Write-SqlTableData){ 
    Write-Verbose "(Function already loaded.)"
    } 
Else{
    Write-Verbose "Importing SQLServer Module"
    Import-Module sqlServer
}

#endregion


#region Clear SQL table
Write-Verbose "Clear SQL table"
$clearTable = @"
use Reports
Delete from [dbo].[$kScript]
"@

Invoke-Sqlcmd $clearTable -Database $kDBName -ServerInstance $kSQLServer -querytimeout ([int]::MaxValue)
#endregion




#region ------------------  Main ---------------------------

# Retrieve LDS Objects and update SQL

Write-Verbose "Inject lastupdated timestamp to SQL"
$exists = Invoke-Sqlcmd -Query "SELECT * from $kLastUpdateTable WHERE recordname = '$kScript';" -Database $kDBName -ServerInstance $kSQLSERVER
If ($exists){Invoke-Sqlcmd -Query "UPDATE $kLastUpdateTable SET lastupdated = (GetDate()), recordname = '$kScript' WHERE recordname = '$kScript';" -Database $kDBName -ServerInstance $kSQLSERVER}
Else {Invoke-Sqlcmd -Query "INSERT INTO $kLastUpdateTable (lastupdated, recordname) VALUES ((GetDate()), '$kScript');" -Database $kDBName -ServerInstance $kSQLSERVER}

Write-Verbose "Get AD Objects which are in scope for ADAMSync that have Exchange data written"

# msExchVersion, mail should not be present
$problemGroups = Get-ADGroup -Filter * -Properties samaccountname, gidNumber, msExchVersion, mail, legacyExchangeDN, groupCategory -SearchBase 'OU=groups,DC=us,DC=tripadvisor,DC=local' |
Where {$_.msExchVersion -ne $null} |
#Where {$_.msExchVersion -ne $null -and $_.gidNumber -ne $null} |
Select samaccountname, gidNumber, msExchVersion, mail, legacyExchangeDN, @{N='groupCategory';E={ [string]$_.groupCategory}}

Write-Verbose "Insert to $kTable"
Write-SqlTableData -DatabaseName $kDBName -SchemaName $kSchema -TableName $kTable -InputData $problemGroups -ServerInstance $kSQLServer -Verbose


# Check for critical sync failure

Try{$logError = Get-Content $logPath | Select-String -Pattern "ldap_add_sW: No Such Attribute", "ldap_modify_sW: No Such Attribute" -Context 28,0
#Write-Verbose $logError
}
Catch{Write-Warning $error[0].ToString() $error[0].InvocationInfo.PositionMessage}



If ($logError){
    ($logError)[0].context | Format-List
    $offendingGroup = (($logError).context).DisplayPreContext | Select-String -Pattern 'DC=tripadvisor' 
    $groupOnly = $offendingGroup -replace 'Adding target object '

$jiraformatted = "{html}<pre><br> $groupOnly <br><br></pre>{html}"# Input for Jira ticket

# Jira Ticket
$strDescription = @"

This is an automated ticket generated by $kScript.ps1 running on $env:COMPUTERNAME

A group object could not be created by ADAMSync, the offending group is $groupOnly 

This will stop all other updates from AD.

$jiraformatted


The options to fix this in order of preference:

1. Delete and recreate the group without any email address
    If this group needs to keep it's gid and it's email address is in use please follow the runbook: https://intranet/display/IO/LDS+Group+Sync+Fix
    

2. The quick and 'dirty' fix is to move this group from GROUPS OU to an OU not sync'd



"@


New-JiraTicket -Summary "ADAMSync critical error detected" -Description $strDescription -Labels 'Unplanned_Support'

}

#endregion 



#region Send results to Grafana
$timestamp = [Math]::Floor([decimal](Get-Date([datetime](Get-Date)).ToUniversalTime()-uformat "%s"))

Write-Verbose "Sending problem group data to Grafana"
$problemGroupCountQuery= @"
SELECT Count (*) as found
  FROM [dbo].[$kTable]
GO
"@

$problemGroupCount = Invoke-Sqlcmd $problemGroupCountQuery -Database $kDBName -ServerInstance $kSQLServer -querytimeout ([int]::MaxValue)
If ($problemGroupCount){Send-GraphiteMetric -CarbonServer $kCarbonserver -CarbonServerPort $kCarbonport -UDP -MetricPath "audit.adlds.notsyncing" -MetricValue $($problemGroupCount.found) -UnixTime $timestamp -Verbose}
Else {Send-GraphiteMetric -CarbonServer $kCarbonserver -CarbonServerPort $kCarbonport -UDP -MetricPath "audit.adlds.notsyncing" -MetricValue '0' -UnixTime $timestamp -Verbose}

#endregion

Stop-Transcript
